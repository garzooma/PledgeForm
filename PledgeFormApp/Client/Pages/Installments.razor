@page "/installmentspage"
@using PledgeFormApp.Shared
@inject HttpClient Http

<h3>Installments</h3>
@if (installmentsList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <EditForm Model="@displayModel">
        <div class="container">
            <div class="row">
                <div class="col-lg-3">
                    <InputRadioGroup Name="DisplayType" @bind-Value="displayModel.ListMode">
                        <InputRadio Name="DisplayType" Value="DonationDisplayModel.DonationsListMode.year" />This year<br />
                        <InputRadio Name="DisplayType" Value="DonationDisplayModel.DonationsListMode.today" />Today<br />
                        <InputRadio Name="DisplayType" Value="DonationDisplayModel.DonationsListMode.custom" />Custom<br />
                    </InputRadioGroup>
                </div>
                <div class="col-lg-8 form-group" hidden="@hideDate">
                    <div class="labeled-control">
                        <label for="Date">Date:</label>
                        <InputDate @bind-Value="displayModel.FromDate" class="form-control" id="Date" />
                    </div>
                </div>
                <div class="col-lg-8 form-group" hidden="@hideDateRange">
                    <div class="labeled-control">
                        <label for="FromDate">From:</label>
                        <InputDate @bind-Value="displayModel.FromDate" class="form-control" id="FromDate" />
                    </div>
                    <div class="labeled-control">
                        <label for="ToDate">To:</label>
                        <InputDate @bind-Value="displayModel.ToDate" class="form-control" id="ToDate" />
                    </div>
                </div>
            </div>
        </div>
    </EditForm>
    <h3>List</h3>
    <table class="table">
        <thead>
            <tr>
                <th>ID</th>
                <th>Date</th>
                <th>Amount</th>
                <th>Pledger</th>
                <th>Envelope</th>
            </tr>
        </thead>
        <tbody>
            @foreach (PledgeFormApp.Shared.Installment installment in installmentsList)
            {
                <tr>
                    <td>@installment.ID</td>
                    <td>@installment.Date.ToString("MM/dd/yyyy")</td>
                    <td>@installment.Amount</td>
                    <td>@installment.Pledger</td>
                    <td>@installment.EnvelopeNumber</td>
                </tr>
            }
        </tbody>
    </table>

}

@code {
  private PledgeFormApp.Shared.Installment[] installmentsList;

  private DonationDisplayModel displayModel = new DonationDisplayModel();

  private bool hideDate
  {
      get
      {
          return displayModel.ListMode != DonationDisplayModel.DonationsListMode.today;
      }
  }

  private bool hideDateRange
  {
      get
      {
          return displayModel.ListMode != DonationDisplayModel.DonationsListMode.custom;
      }
  }

  [Inject]
  Services.IInstallmentDataService InstallmentDataService { get; set; }

  [Inject]
  Services.IDonationDataService DonationDataService { get; set; }

  protected override async Task OnInitializedAsync()
  {
      displayModel.ListMode = DonationDisplayModel.DonationsListMode.today;
      await ShowInstallments();
      displayModel.PropertyChanged += (s, e) => { UpdateData();};

  }

  private async void UpdateData()
  {
      await Task.Run(() => ShowInstallments());
      StateHasChanged();
  }

  private async Task ShowInstallments()
  {
      IEnumerable<Installment> list;
      
      if (displayModel.ListMode == DonationDisplayModel.DonationsListMode.year)
      {
          list = await InstallmentDataService.GetInstallmentsByYear(displayModel.Year);
      }
      else if (displayModel.ListMode == DonationDisplayModel.DonationsListMode.all)
      {
          list = await InstallmentDataService.GetAllInstallments();
      }
      else if (displayModel.ListMode == DonationDisplayModel.DonationsListMode.all)
      {
          list = await InstallmentDataService.GetInstallmentsByDates(displayModel.FromDate, displayModel.FromDate);
      }
      else
      {
          list = await InstallmentDataService.GetInstallmentsByDates(displayModel.FromDate, displayModel.ToDate);
      }
      installmentsList = list.ToArray();
  }

}
